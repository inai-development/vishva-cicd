Here are some code snippets related to AI and machine learning:

**Example 1: Simple Neural Network using Keras (Python)**
```python
from keras.models import Sequential
from keras.layers import Dense

# Create a simple neural network with 2 inputs, 2 hidden layers, and 1 output
model = Sequential()
model.add(Dense(64, activation='relu', input_dim=2))
model.add(Dense(32, activation='relu'))
model.add(Dense(1, activation='sigmoid'))

# Compile the model
model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])
```
**Example 2: Text Classification using scikit-learn (Python)**
```python
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB

# Load the dataset
train_data = [...]
test_data = [...]

# Create a TF-IDF vectorizer
vectorizer = TfidfVectorizer()

# Fit the vectorizer to the training data and transform both datasets
X_train = vectorizer.fit_transform(train_data)
y_train = [...]
X_test = vectorizer.transform(test_data)

# Train a Naive Bayes classifier
clf = MultinomialNB()
clf.fit(X_train, y_train)

# Make predictions on the test data
y_pred = clf.predict(X_test)
```
**Example 3: Image Classification using TensorFlow (Python)**
```python
import tensorflow as tf

# Load the dataset
train_data = [...]
test_data = [...]

# Create a TensorFlow model
model = tf.keras.models.Sequential([
    tf.keras.layers.Conv2D(32, (3, 3), activation='relu', input_shape=(224, 224, 3)),
    tf.keras.layers.MaxPooling2D((2, 2)),
    tf.keras.layers.Flatten(),
    tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dropout(0.2),
    tf.keras.layers.Dense(10, activation='softmax')
])

# Compile the model
model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])

# Train the model
model.fit(train_data, epochs=10)
```
**Example 4: Simple Chatbot using NLTK and Python**
```python
import nltk
from nltk.tokenize import word_tokenize

# Define a simple chatbot response function
def respond(user_input):
    tokens = word_tokenize(user_input)
    if 'hello' in tokens:
        return 'Hello! How can I help you?'
    elif 'goodbye' in tokens:
        return 'Goodbye! Have a great day!'
    else:
        return 'I didn\'t understand that. Please try again!'

# Test the chatbot
user_input = 'Hello, how are you?'
print(respond(user_input))  # Output: Hello! How can I help you?
```
These code snippets demonstrate various aspects of AI and machine learning, such as neural networks, text classification, image classification, and natural language processing.